package com.example.opentest.ui

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import com.example.opentest.R
import com.example.opentest.opencv.ImageUtil
import com.example.opentest.opencv.AndroidRect
import com.example.opentest.util.TimberUtil
import es.dmoral.toasty.Toasty
import kotlinx.android.synthetic.main.activity_rect_color.*
import org.opencv.android.Utils
import org.opencv.core.*
import org.opencv.imgproc.Imgproc

class Rect_Activity : AppCompatActivity() {

    //刘亦菲
    lateinit var realLiuYiFeiMat: Mat

    //刘亦菲显示大小
    lateinit var realLiuYiFeiRect: Rect

    //图像大小
    lateinit var imageMat: Mat


    //林允儿
    lateinit var realLinYunErMat: Mat

    //林允儿显示大小
    lateinit var realLinYunErRect: Rect


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_rect_color)

        var liuyifeiMat = Utils.loadResource(this, R.mipmap.liuyifei1)
        var linyunerMat = Utils.loadResource(this, R.mipmap.linyuner1)


        iv1.post {
            var width = iv1.width
            var height = iv1.height
            //图像大小
            imageMat = Mat(
                Size(width.toDouble(), height.toDouble()),
                CvType.CV_8UC3,
                Scalar(0.0, 0.0, 255.0, 125.0)
            )

            //修改大小
            var newWidth = width / 5.0
            var newHeight = liuyifeiMat.height() * newWidth / liuyifeiMat.width()

            realLiuYiFeiMat = Mat()
            Imgproc.resize(liuyifeiMat, realLiuYiFeiMat, Size(newWidth, newHeight))
            //刘亦菲起始值
            realLiuYiFeiRect = Rect(0, 0, realLiuYiFeiMat.cols(), realLiuYiFeiMat.rows())

            //林允儿 处在正中间
            realLinYunErMat = Mat()
            Imgproc.resize(linyunerMat, realLinYunErMat, Size(newWidth, newHeight))
            realLinYunErRect = Rect(
                (imageMat.width() - realLinYunErMat.width()) / 2,
                (imageMat.height() - realLinYunErMat.height()) / 2,
                realLinYunErMat.cols(),
                realLinYunErMat.rows()
            )


            iv1.setImageBitmap(ImageUtil.matToBitmap(createMat()))


        }

        /**
         * 1. 只传 filename flags 默认为 1 彩色图
         * 2. flags = Imgcodecs 下 CV_LOAD 常量
         *      +-- IMREAD_UNCHANGED = -1;   载入包含 Alpha 通道时，需要
         *      +-- IMREAD_GRAYSCALE = 0;    加载一个张灰度图，设置该值，图像将会转换为灰度后返回
         *      +-- IMREAD_COLOR = 1;        加载一张彩色图，设置为该值，图像将会转化为3通道彩色图返回
         *      +-- IMREAD_ANYDEPTH = 2;     如果载入的图像为16Bite 或者 32Bite 则载入对应 Bite 的图像，反之载入的图像为8Bite
         *      +-- IMREAD_ANYCOLOR = 4;     如果载入的图像为16Bite 或者 32Bite 则载入对应 Bite 的图像，反之载入的图像为8Bite
         */

        //右
        btn1.setOnClickListener {
            var x = 50
            realLiuYiFeiRect = Rect(
                realLiuYiFeiRect.x + x,
                realLiuYiFeiRect.y,
                realLiuYiFeiRect.width,
                realLiuYiFeiRect.height
            )
            iv1.setImageBitmap(ImageUtil.matToBitmap(createMat()))
        }

        //左
        btn2.setOnClickListener {
            var x = -50
            realLiuYiFeiRect = Rect(
                realLiuYiFeiRect.x + x,
                realLiuYiFeiRect.y,
                realLiuYiFeiRect.width,
                realLiuYiFeiRect.height
            )
            iv1.setImageBitmap(ImageUtil.matToBitmap(createMat()))
        }

        //上
        btn3.setOnClickListener {
            var y = -50
            realLiuYiFeiRect = Rect(
                realLiuYiFeiRect.x,
                realLiuYiFeiRect.y + y,
                realLiuYiFeiRect.width,
                realLiuYiFeiRect.height
            )
            iv1.setImageBitmap(ImageUtil.matToBitmap(createMat()))
        }

        //下
        btn4.setOnClickListener {
            var y = 50
            realLiuYiFeiRect = Rect(
                realLiuYiFeiRect.x,
                realLiuYiFeiRect.y + y,
                realLiuYiFeiRect.width,
                realLiuYiFeiRect.height
            )
            iv1.setImageBitmap(ImageUtil.matToBitmap(createMat()))
        }
    }


    private fun createMat(): Mat {
        //右
        if (realLiuYiFeiRect.x + realLiuYiFeiRect.width > imageMat.width()) {
            Toasty.error(this, "向右超出范围").show()
            realLiuYiFeiRect = Rect(
                imageMat.width() - realLiuYiFeiRect.width,
                realLiuYiFeiRect.y,
                realLiuYiFeiRect.width,
                realLiuYiFeiRect.height
            )
        }
        //左
        if (realLiuYiFeiRect.x < 0) {
            Toasty.error(this, "向左超出范围").show()
            realLiuYiFeiRect =
                Rect(0, realLiuYiFeiRect.y, realLiuYiFeiRect.width, realLiuYiFeiRect.height)
        }

        //上
        if (realLiuYiFeiRect.y < 0) {
            Toasty.error(this, "向上超出范围").show()
            realLiuYiFeiRect =
                Rect(realLiuYiFeiRect.x, 0, realLiuYiFeiRect.width, realLiuYiFeiRect.height)
        }

        //下
        if (realLiuYiFeiRect.y + realLiuYiFeiRect.height > imageMat.height()) {
            Toasty.error(this, "向下超出范围").show()
            realLiuYiFeiRect = Rect(
                realLiuYiFeiRect.x,
                imageMat.height() - realLiuYiFeiRect.height,
                realLiuYiFeiRect.width,
                realLiuYiFeiRect.height
            )
        }

        var imageMatClone = imageMat.clone()

        //添加林允儿
        //根据 logo 的宽高，在原图上划定感兴趣区域
        var submat2 = imageMatClone.submat(realLinYunErRect)
        realLinYunErMat.copyTo(submat2, realLinYunErMat)

        //添加刘亦菲
        ////根据 logo 的宽高，在原图上划定感兴趣区域
        var submat1 = imageMatClone.submat(realLiuYiFeiRect)
        realLiuYiFeiMat.copyTo(submat1, realLiuYiFeiMat)


        //计算重叠区域
        var toghterRect = AndroidRect.getBothArea(realLiuYiFeiRect, realLinYunErRect)
        if (toghterRect != null) {
            TimberUtil.logI("area: (" + toghterRect.x + "," + toghterRect.y + "," + toghterRect.width + "," + toghterRect.height + ")")

            Imgproc.rectangle(
                imageMatClone,
                toghterRect,
                Scalar(0.0, 255.0, 0.0),Imgproc.LINE_4
            )

        }


        var toMat = Mat()
        Imgproc.cvtColor(imageMatClone, toMat, Imgproc.COLOR_RGB2BGR)

        return toMat

    }

}