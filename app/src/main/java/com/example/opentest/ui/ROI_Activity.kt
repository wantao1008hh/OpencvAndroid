package com.example.opentest.ui

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import com.example.opentest.R
import com.example.opentest.opencv.ImageUtil
import com.example.opentest.util.TimberUtil
import kotlinx.android.synthetic.main.activity_roi.*
import org.opencv.android.Utils
import org.opencv.core.*
import org.opencv.imgcodecs.Imgcodecs
import org.opencv.imgproc.Imgproc


/**
 * 1. 对 ROI 区域描边
 * 2. 截取 ROI 区域
 * 3. 用图片在原始图片上划定 ROI 区域，并替换
 */
class ROI_Activity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_roi)

        /**
         * 1. 只传 filename flags 默认为 1 彩色图
         * 2. flags = Imgcodecs 下 CV_LOAD 常量
         *      +-- IMREAD_UNCHANGED = -1;   载入包含 Alpha 通道时，需要
         *      +-- IMREAD_GRAYSCALE = 0;    加载一个张灰度图，设置该值，图像将会转换为灰度后返回
         *      +-- IMREAD_COLOR = 1;        加载一张彩色图，设置为该值，图像将会转化为3通道彩色图返回
         *      +-- IMREAD_ANYDEPTH = 2;     如果载入的图像为16Bite 或者 32Bite 则载入对应 Bite 的图像，反之载入的图像为8Bite
         *      +-- IMREAD_ANYCOLOR = 4;     如果载入的图像为16Bite 或者 32Bite 则载入对应 Bite 的图像，反之载入的图像为8Bite
         */
        var mat = Utils.loadResource(this, R.mipmap.liuyifei1)
        var logoMat = Utils.loadResource(this, R.mipmap.logo,Imgcodecs.IMREAD_COLOR)

        // 划线，设置2个点，分别为开始点，结束点，设置线条颜色，Imgproc.FILLED 充满
        // 使用Point
        btn1.setOnClickListener {
            var newMat = mat.clone()
            var widht = newMat.width()
            var height = newMat.height()
            Imgproc.rectangle(
                newMat,
                Point(widht / 4.0, height / 4.0),
                Point(widht * 3 / 4.0, height * 3 / 4.0),
                Scalar(0.0, 0.0, 255.0),Imgproc.LINE_AA
            )
            var toMat= Mat()
            Imgproc.cvtColor(newMat,toMat,Imgproc.COLOR_RGB2BGR)
            iv2.setImageBitmap(ImageUtil.matToBitmap(toMat))
        }

        //使用Rect(x,y,dx,dy)
        btn2.setOnClickListener {
            var newMat = mat.clone()
            var widht = newMat.width()
            var height = newMat.height()
            var rect=Rect(widht / 4, height / 4,widht  /2, height /2)
            Imgproc.rectangle(
                newMat,
                rect,
                Scalar(0.0, 255.0, 0.0),Imgproc.LINE_4
            )
            var toMat= Mat()
            Imgproc.cvtColor(newMat,toMat,Imgproc.COLOR_RGB2BGR)
            iv3.setImageBitmap(ImageUtil.matToBitmap(toMat))
        }

        //添加logo
        btn3.setOnClickListener {
            var newMat = mat.clone()
            var widht = newMat.width()
            var height = newMat.height()
            ////根据 logo 的宽高，在原图上划定感兴趣区域
            var submat=newMat.submat(Rect(0, 0, logoMat.cols(), logoMat.rows()))
            TimberUtil.logI("submat channels : "+submat.channels())
            //如果logo是4通道的，转化为3通道；或者把submat转为4通道。
            TimberUtil.logI("logo channels : "+logoMat.channels())
//            var newLogoMat=Mat()
//            Imgproc.cvtColor(logoMat,newLogoMat,Imgproc.COLOR_RGB2BGR,3)
            //alpha 表示透明度,beta表示logo的透明度
            Core.addWeighted(submat, 1.0, logoMat, 1.0, 0.0, submat)

            var toMat= Mat()
            Imgproc.cvtColor(newMat,toMat,Imgproc.COLOR_RGB2BGR)
            iv4.setImageBitmap(ImageUtil.matToBitmap(toMat))
        }

        btn4.setOnClickListener {
            var newMat = mat.clone()
            var widht = newMat.width()
            var height = newMat.height()

                //  var mask = Utils.loadResource(this, R.mipmap.logo,Imgcodecs.IMREAD_GRAYSCALE)
            ////根据 logo 的宽高，在原图上划定感兴趣区域
            var submat=newMat.submat(Rect(0, 0, logoMat.cols(), logoMat.rows()))
            logoMat.copyTo(submat,logoMat)

            var toMat= Mat()
            Imgproc.cvtColor(newMat,toMat,Imgproc.COLOR_RGB2BGR)
            iv5.setImageBitmap(ImageUtil.matToBitmap(toMat))

        }

    }
}