package com.example.opentest

import android.Manifest
import android.content.Intent
import android.os.Bundle
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.example.opentest.ui.*
import com.example.opentest.util.TimberUtil
import com.tbruyelle.rxpermissions3.RxPermissions
import es.dmoral.toasty.Toasty
import kotlinx.android.synthetic.main.activity_main.*
import org.opencv.android.OpenCVLoader

class MainActivity : AppCompatActivity() {


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        //获取权限
        RxPermissions(this)
            .request(
                Manifest.permission.WRITE_EXTERNAL_STORAGE,
                Manifest.permission.READ_EXTERNAL_STORAGE
            )
            .subscribe {
                if (!it) {
                    Toasty.error(this, "读写权限未开启", Toast.LENGTH_SHORT, true).show()
                }
            }

        /**
         * 创建图像
         */
        btn1.setOnClickListener {
            startActivity(Intent(this, Mat_Activity::class.java))
        }

        /**
         * 灰度和彩色图像转换
         */
        btn2.setOnClickListener {
            startActivity(Intent(this, Gray_RGB_Activity::class.java))
        }


        /**
         * 1. 对 ROI 区域描边
         * 2. 截取 ROI 区域
         * 3. 用图片在原始图片上划定 ROI 区域，并替换
         */
        btn3.setOnClickListener {
            startActivity(Intent(this, ROI_Activity::class.java))
        }

        /**
         * 矩形平移,交集
         */
        btn4.setOnClickListener {
            startActivity(Intent(this, Rect_Activity::class.java))
        }

        /**
         * 绘图像(直线、矩形、圆形、椭圆等)
         */
        btn5.setOnClickListener {
            startActivity(Intent(this, Canvas_Activity::class.java))
        }

        /**
         * 图像空间压缩
         */
        btn6.setOnClickListener {
            startActivity(Intent(this, Color_Change_Activity::class.java))
        }
    }


    override fun onResume() {
        super.onResume()
        if (!OpenCVLoader.initDebug()) {
            TimberUtil.logI("Internal OpenCV library not found. Using OpenCV Manager for initialization")
            OpenCVLoader.initAsync(OpenCVLoader.OPENCV_VERSION_3_0_0, this, null)
        } else {
            TimberUtil.logI("OpenCV library found inside package. Using it!")
        }
    }
}
